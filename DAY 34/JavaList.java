import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class JavaList
{

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int numElements = Integer.parseInt(sc.nextLine());
        ArrayList<Integer> numList = new ArrayList<>();
        for(int i = 0;i < numElements;i++){
            numList.add(sc.nextInt());
        }
        int numQueries = sc.nextInt();
        sc.nextLine();
        for(int i = 0;i < numQueries;i++){
            String queryType = sc.nextLine();
            if(queryType.equals("Insert")){
                String[] queryArray = sc.nextLine().split(" ");
                numList.add(Integer.parseInt(queryArray[0]),Integer.parseInt(queryArray[1]));
            }else{
                int removeIndex = Integer.parseInt(sc.nextLine());
                numList.remove(removeIndex);
            }  
        }
        for(Integer num : numList){
            System.out.print(num+" ");
        }
    }
}

/* Test Case 0
Input (stdin)
200
{-truncated-}

Expected Output

{-truncated-}

Test Case 1
Input (stdin)

11
27358 39344 71551 99795 97548 77891 28014 1546 24269 38550 23153
10
Insert
3 15097
Delete
0
Insert
1 25282
Insert
7 13736
Insert
10 50299
Delete
11
Insert
5 13902
Insert
2 58695
Insert{-truncated-}

Expected Output

39344 25282 58695 71551 15097 99795 13902 97548 77891 44009 13736 1546 50299 38550 23153
*/